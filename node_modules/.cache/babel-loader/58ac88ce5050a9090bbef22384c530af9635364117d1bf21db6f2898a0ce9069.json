{"ast":null,"code":"var _jsxFileName = \"/home/ricky/Development/Phase 5/ticketitamasha/client/src/components/CustomerEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/user\";\n// import {useParams} from 'react-router-dom'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerEvents() {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const [customerEvents, setCustomerEvents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  // const { id } = useParams();\n\n  console.log(user.id);\n  useEffect(() => {\n    fetch(`/customers/${user.id}/events`).then(res => res.json()).then(events => {\n      setCustomerEvents(events);\n      setIsLoaded(true);\n    });\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  console.log(customerEvents);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CustomerEvents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CustomerEvents, \"XpcLZYG2abzvaQ2MFs4M48/HNC0=\");\n_c = CustomerEvents;\nexport default CustomerEvents;\nvar _c;\n$RefreshReg$(_c, \"CustomerEvents\");","map":{"version":3,"names":["React","useEffect","useState","useContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerEvents","_s","user","customerEvents","setCustomerEvents","isLoaded","setIsLoaded","console","log","id","fetch","then","res","json","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ricky/Development/Phase 5/ticketitamasha/client/src/components/CustomerEvents.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/user\";\n// import {useParams} from 'react-router-dom'\n\n\nfunction CustomerEvents(){\n    const { user } = useContext(UserContext)\n    const [customerEvents, setCustomerEvents] = useState([])\n    const [isLoaded, setIsLoaded] = useState(false)\n    // const { id } = useParams();\n\nconsole.log(user.id);\n    useEffect(() => {       \n        fetch(`/customers/${user.id}/events`)\n        .then((res) => res.json())\n        .then((events) => {\n            setCustomerEvents(events)\n            setIsLoaded(true)\n        })\n        \n    }, [])\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    console.log(customerEvents);    \n    return(\n        <>\n        <h1>CustomerEvents</h1>\n        </>\n    )\n}\nexport default CustomerEvents;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,iBAAiB;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EACxC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C;;EAEJc,OAAO,CAACC,GAAG,CAACN,IAAI,CAACO,EAAE,CAAC;EAChBjB,SAAS,CAAC,MAAM;IACZkB,KAAK,CAAE,cAAaR,IAAI,CAACO,EAAG,SAAQ,CAAC,CACpCE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,MAAM,IAAK;MACdV,iBAAiB,CAACU,MAAM,CAAC;MACzBR,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,QAAQ,EAAE,oBAAOR,OAAA;IAAAkB,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACzCZ,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAC3B,oBACIN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBACpB;AAEX;AAAClB,EAAA,CAxBQD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAyBvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}