{"ast":null,"code":"var _jsxFileName = \"/home/ricky/Development/Phase 5/tamasha frontend/src/components/BoughtEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BoughtEvents() {\n  _s();\n  const [boughtEvents, setBoughtEvents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`https://tamasha.onrender.com/customers/${id}/bought`).then(res => res.json()).then(events => {\n      setBoughtEvents(events);\n      setIsLoaded(true);\n    });\n  }, [id]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  // return(\n  //     <>\n  //     <div className=\"row\">\n  //     {customerEvents.map((events) => \n  //     <CustomerEventsCard key = {events.id} event = {events.event} onDeleteEvent={onDeleteEvent} eventId = {events.id}/>)} \n  //     </div>      \n  //     </>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(BoughtEvents, \"JDF/LOntLfH0+czG3V0U2S3/I9s=\", false, function () {\n  return [useParams];\n});\n_c = BoughtEvents;\nexport default BoughtEvents;\nvar _c;\n$RefreshReg$(_c, \"BoughtEvents\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","BoughtEvents","_s","boughtEvents","setBoughtEvents","isLoaded","setIsLoaded","id","fetch","then","res","json","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ricky/Development/Phase 5/tamasha frontend/src/components/BoughtEvents.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nfunction BoughtEvents(){\r\n    const [boughtEvents, setBoughtEvents] = useState([])\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const { id } = useParams();\r\n   \r\n\r\n\r\n    useEffect(() => {       \r\n        fetch(`https://tamasha.onrender.com/customers/${id}/bought`)\r\n        .then((res) => res.json())\r\n        .then((events) => {\r\n            setBoughtEvents(events)\r\n            setIsLoaded(true)\r\n        })\r\n        \r\n    }, [id])\r\n\r\n   \r\n\r\n    if (!isLoaded) return <h2>Loading...</h2>\r\n    // return(\r\n    //     <>\r\n    //     <div className=\"row\">\r\n    //     {customerEvents.map((events) => \r\n    //     <CustomerEventsCard key = {events.id} event = {events.event} onDeleteEvent={onDeleteEvent} eventId = {events.id}/>)} \r\n    //     </div>      \r\n    //     </>\r\n\r\n    return(\r\n        <>\r\n       <div></div>\r\n        \r\n        </>\r\n    )\r\n}\r\nexport default BoughtEvents;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,EAAE;EAI1BF,SAAS,CAAC,MAAM;IACZc,KAAK,CAAE,0CAAyCD,EAAG,SAAQ,CAAC,CAC3DE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,MAAM,IAAK;MACdR,eAAe,CAACQ,MAAM,CAAC;MACvBN,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;EAEN,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC;EAIR,IAAI,CAACF,QAAQ,EAAE,oBAAOP,OAAA;IAAAe,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACzC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACInB,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACDf,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAW,iBAEP;AAEX;AAACf,EAAA,CAlCQD,YAAY;EAAA,QAGFL,SAAS;AAAA;AAAAsB,EAAA,GAHnBjB,YAAY;AAmCrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}